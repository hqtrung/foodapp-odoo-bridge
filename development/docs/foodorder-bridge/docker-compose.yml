# Docker Compose for FoodOrder Bridge API - Local Development
version: '3.8'

services:
  # Main API service
  foodorder-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: foodorder-bridge-api
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - HOST=0.0.0.0
      - PORT=8000
      - LOG_LEVEL=DEBUG
    env_file:
      - .env
    volumes:
      # Mount cache directory for persistence
      - ./cache:/app/cache
      # Mount images directory for development
      - ./public:/app/public
      # Mount source code for development (hot reload)
      - ./app:/app/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - foodorder-network

  # Redis for caching (optional enhancement)
  redis:
    image: redis:7-alpine
    container_name: foodorder-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - foodorder-network

  # Nginx reverse proxy (optional for local testing)
  nginx:
    image: nginx:alpine
    container_name: foodorder-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./public:/var/www/html/static:ro
    depends_on:
      - foodorder-api
    restart: unless-stopped
    networks:
      - foodorder-network

networks:
  foodorder-network:
    driver: bridge

volumes:
  redis_data:
    driver: local